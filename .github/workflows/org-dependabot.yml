name: Refresh dependabot.yml & Terraform sources

on:
  workflow_call:
    inputs:
      head_branch:
        description: "Branch to update (pass github.head_ref for PRs)"
        required: true
        type: string
      include_github_actions:
        description: 'Add a "github-actions" update stanza'
        required: false
        type: string
        default: "true"
      default_interval:
        description: 'Schedule interval for Terraform directories'
        required: false
        type: string
        default: "daily"
      depb_path:
        description: "Path to dependabot.yml"
        required: false
        type: string
        default: ".github/dependabot.yml"
      commit_message:
        description: "Commit message"
        required: false
        type: string
        default: "chore: refresh dependabot.yml & Terraform sources"

permissions:
  contents: write
  pull-requests: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target branch
        uses: actions/checkout@v5
        with:
          ref: ${{ inputs.head_branch }}
          fetch-depth: 0

      - name: Configure git identity
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global --add safe.directory '*'

      - name: Run refresh (embedded script)
        env:
          INCLUDE_GITHUB_ACTIONS: ${{ inputs.include_github_actions }}
          DEFAULT_INTERVAL: ${{ inputs.default_interval }}
          REPO_ROOT: ${{ github.workspace }}
          DEPB_PATH: ${{ inputs.depb_path }}
        run: |
          set -euo pipefail
          cat > /tmp/dependabot_refresh.sh <<'BASH'
          #!/usr/bin/env bash
          set -euo pipefail

          # =========================
          # Config (override via env)
          # =========================
          DEPB_PATH="${DEPB_PATH:-.github/dependabot.yml}"
          INCLUDE_GITHUB_ACTIONS="${INCLUDE_GITHUB_ACTIONS:-true}"   # "false" to skip GH Actions stanza
          DEFAULT_INTERVAL="${DEFAULT_INTERVAL:-daily}"               # dependabot schedule for terraform dirs
          REPO_ROOT="${REPO_ROOT:-$(git rev-parse --show-toplevel 2>/dev/null || pwd)}"

          # =========================
          # Helpers
          # =========================
          log() { printf '%s\n' "$*" >&2; }
          die() { log "❌ $*"; exit 1; }

          require_tools() {
            for t in awk sort perl find; do
              command -v "$t" >/dev/null 2>&1 || die "$t is required"
            done
          }

          # Unique dirs that contain at least one .tf file (exclude .git)
          find_tf_dirs() {
            dirs=()
            while IFS= read -r -d '' file; do
              dir="$(dirname "$file")"
              case "$dir" in
                "$REPO_ROOT"*) dir="${dir#"$REPO_ROOT"}" ;;
              esac
              [[ -z "$dir" ]] && dir="/"
              [[ "$dir" != /* ]] && dir="/$dir"
              dirs+=("$dir")
            done < <(find "$REPO_ROOT" -type f -name '*.tf' -not -path '*/.git/*' -print0)

            printf "%s\n" "${dirs[@]}" | sort -u
          }

          # Build dependabot.yml content to stdout
          generate_dependabot_yaml() {
            local dirs=("$@")

            cat <<'YAML'
          # Auto-generated by dependabot_refresh.sh
          # See: https://docs.github.com/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file

          version: 2
          updates:
          YAML

            if [[ "${INCLUDE_GITHUB_ACTIONS}" == "true" ]]; then
              cat <<'YAML'
            - package-ecosystem: "github-actions"
              directory: "/"
              schedule:
                interval: "daily"
              commit-message:
                prefix: "chore"
                include: "scope"
          YAML
            fi

            for d in "${dirs[@]}"; do
              cat <<YAML
            - package-ecosystem: "terraform"
              directory: "${d}"
              schedule:
                interval: "${DEFAULT_INTERVAL}"
              commit-message:
                prefix: "chore"
                include: "scope"
          YAML
            done
          }

          # Safe write to a path (no backup)
          safe_write_file() {
            local target="$1"
            local temp="$2"

            mkdir -p "$(dirname "$target")"

            if [[ -f "$target" ]]; then
              if diff -q "$target" "$temp" >/dev/null 2>&1; then
                log "✅ ${target} already up to date."
                rm -f "$temp"
                return 0
              fi
            else
              log "🆕 ${target} does not exist; creating."
            fi

            mv -f "$temp" "$target"
            log "✅ Wrote ${target}"
          }

          # Rewrite Terraform module sources: github.com/... → git::https://github.com/...
          rewrite_tf_sources() {
            local changed_files=0
            local matched_lines=0

            while IFS= read -r -d '' tf; do
              if grep -Eq 'source\s*=\s*"\s*github\.com/' "$tf"; then
                local count
                count=$(grep -E 'source\s*=\s*"\s*github\.com/' -n "$tf" | wc -l | tr -d ' ')
                matched_lines=$((matched_lines + count))
                perl -0777 -i -pe 's/(source\s*=\s*")\s*github\.com\//${1}git::https:\/\/github.com\//g' "$tf"
                changed_files=$((changed_files + 1))
              fi
            done < <(find "$REPO_ROOT" -type f -name '*.tf' -not -path '*/.git/*' -print0)

            log "🔧 Rewrote module sources in $changed_files file(s); matched $matched_lines source line(s)."
          }

          # =========================
          # Main
          # =========================
          require_tools

          log "📂 Repo root: $REPO_ROOT"
          tf_dirs=()
          while IFS= read -r line; do
            tf_dirs+=("$line")
          done <<EOF
          $(find_tf_dirs)
          EOF

          if [[ ${#tf_dirs[@]} -eq 0 ]]; then
            log "⚠️  No .tf files found; will still ensure dependabot.yml (github-actions only if enabled)."
          fi

          tmpfile="$(mktemp)"
          generate_dependabot_yaml "${tf_dirs[@]}" > "$tmpfile"
          safe_write_file "$DEPB_PATH" "$tmpfile"

          rewrite_tf_sources

          log "🎉 Done."
          BASH

          chmod +x /tmp/dependabot_refresh.sh
          /tmp/dependabot_refresh.sh

          echo "---- git status ----"
          git status --short || true
          echo "---- changed files ----"
          git diff --name-only -- . ':!**/.git/**' || true

      - name: Commit & push (if changed)
        env:
          HEAD_BRANCH: ${{ inputs.head_branch }}
          COMMIT_MESSAGE: ${{ inputs.commit_message }}
        run: |
          set -euo pipefail
          if git diff --quiet -- . ':!**/.git/**'; then
            echo "No changes detected; nothing to commit."
            exit 0
          fi
          git checkout "${HEAD_BRANCH}"
          git pull --ff-only origin "${HEAD_BRANCH}" || true
          git add -A
          git commit -m "${COMMIT_MESSAGE}"
          git push origin "HEAD:${HEAD_BRANCH}"
