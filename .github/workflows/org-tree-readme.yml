name: Readme Tree (Reusable on PR, external script)

on:
  workflow_call:
    inputs:
      commit_message:
        type: string
        default: "chore: update README tree structure"
      exclude_pattern:
        type: string
        default: ".git|node_modules|.github"
      working_directory:
        type: string
        default: "."
      # External script location (public repo)
      script_repo:
        description: "owner/repo that contains the script"
        type: string
        required: true
      script_ref:
        description: "branch, tag, or SHA to fetch from script_repo"
        type: string
        required: true
      script_path:
        description: "path to script inside script_repo"
        type: string
        default: "scripts/update-readme-tree.sh"

permissions:
  contents: write
  pull-requests: write

jobs:
  update-readme-on-pr:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ inputs.working_directory }}

    steps:
      - name: Checkout PR head (downstream repo)
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.ref || github.ref_name }}
          fetch-depth: 0

      - name: Install tree
        run: sudo apt-get update && sudo apt-get install -y tree

      - name: Checkout script repo (public)
        uses: actions/checkout@v5
        with:
          repository: ${{ inputs.script_repo }}
          ref: ${{ inputs.script_ref }}
          path: _script_repo
          fetch-depth: 1

      - name: Verify script exists
        run: |
          set -e
          if [[ ! -f "_script_repo/${{ inputs.script_path }}" ]]; then
            echo "ERROR: Script not found at _script_repo/${{ inputs.script_path }}"
            echo "Repo: ${{ inputs.script_repo }}  Ref: ${{ inputs.script_ref }}"
            find _script_repo -maxdepth 3 -type f -printf '%p\n' | sort || true
            exit 1
          fi
          chmod +x "_script_repo/${{ inputs.script_path }}"

      - name: Run updater
        id: run
        env:
          EXCLUDE_PATTERN: ${{ inputs.exclude_pattern }}
        run: |
          set +e
          "_script_repo/${{ inputs.script_path }}"
          code=$?
          echo "exit_code=$code" >> $GITHUB_OUTPUT
          exit 0

      - name: Commit & push if changed
        if: ${{ steps.run.outputs.exit_code == '10' }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "${{ inputs.commit_message }}"
          git push origin HEAD
